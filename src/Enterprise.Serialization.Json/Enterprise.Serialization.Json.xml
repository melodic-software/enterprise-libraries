<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enterprise.Serialization.Json</name>
    </assembly>
    <members>
        <member name="T:Enterprise.Serialization.Json.Abstract.Composite.IJsonSerializer">
            <summary>
            This composite interface provides both serialization and deserialization functionality.
            If you only need one or the other, consider using <see cref="T:Enterprise.Serialization.Json.Abstract.ISerializeJson"/> or <see cref="T:Enterprise.Serialization.Json.Abstract.IDeserializeJson"/>.
            </summary>
        </member>
        <member name="T:Enterprise.Serialization.Json.Abstract.IDeserializeJson">
            <summary>
            Deserializes JSON strings into object instances.
            </summary>
        </member>
        <member name="T:Enterprise.Serialization.Json.Abstract.ISerializeJson">
            <summary>
            Serializes objects into JSON strings.
            </summary>
        </member>
        <member name="T:Enterprise.Serialization.Json.Microsoft.JsonNamingPolicies.CustomJsonCamelCaseNamingPolicy">
            <summary>
            This was adapted from the .NET 8 JsonCamelCaseNamingPolicy.
            The core logic hasn't changed, but the original implementation didn't accomodate for "." characters.
            This resulted in half camel cased dictionary keys for things like translated error collections from the result pattern.
            </summary>
        </member>
    </members>
</doc>
