<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enterprise.ApplicationServices.DI</name>
    </assembly>
    <members>
        <member name="M:Enterprise.ApplicationServices.DI.Commands.Handlers.ChainOfResponsibility.CommandHandlerRegistrationExtensions.RegisterCommandHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Enterprise.ApplicationServices.Core.Commands.Handlers.CommandHandlerBase{``0}},System.Action{Enterprise.ApplicationServices.DI.Commands.Handlers.ChainOfResponsibility.RegistrationOptions{``0}})">
            <summary>
            Register a command handler using the chain of responsibility design pattern.
            </summary>
            <typeparam name="TCommand"></typeparam>
            <param name="services"></param>
            <param name="factory"></param>
            <param name="configureOptions"></param>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Commands.Handlers.ChainOfResponsibility.RegistrationOptions`1.CommandHandlerFactory">
            <summary>
            A factory method delegate that instantiates the chain of responsibility instance.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Commands.Handlers.ChainOfResponsibility.RegistrationOptions`1.ConfigureChainOfResponsibility">
            <summary>
            Provide a custom responsibility chain configuration.
            If not provided, the default chain will be used.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Commands.Handlers.Options.RegistrationOptionsBase`1.ServiceLifetime">
            <summary>
            This sets the service lifetime for the command handler registration.
            The default is a transient service lifetime, and is recommended for most registrations.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Commands.Handlers.Options.RegistrationOptionsBase`1.PostConfigure">
            <summary>
            Provider further configuration to the command handler registration.
            </summary>
        </member>
        <member name="M:Enterprise.ApplicationServices.DI.Commands.Handlers.Standard.CommandHandlerRegistrationExtensions.RegisterCommandHandler``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Enterprise.ApplicationServices.Core.Commands.Handlers.CommandHandlerBase{``0}},System.Action{Enterprise.ApplicationServices.DI.Commands.Handlers.Standard.RegistrationOptions{``0}})">
            <summary>
            Register a command handler.
            </summary>
            <typeparam name="TCommand"></typeparam>
            <param name="services"></param>
            <param name="factory"></param>
            <param name="configureOptions"></param>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Commands.Handlers.Standard.RegistrationOptions`1.UseDecorators">
            <summary>
            Register decorators for the command handler.
            This is enabled by default.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Commands.Handlers.Standard.RegistrationOptions`1.DecoratorFactories">
            <summary>
            Provide custom delegates used for decorator composition.
            If none are provided, the default decorators will be used.
            <see cref="P:Enterprise.ApplicationServices.DI.Commands.Handlers.Standard.RegistrationOptions`1.UseDecorators"/> must be true, otherwise decorator registrations will be skipped.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Commands.Handlers.Standard.RegistrationOptions`1.CommandHandlerFactory">
            <summary>
            A factory method delegate that instantiates the command handler instance.
            </summary>
        </member>
        <member name="M:Enterprise.ApplicationServices.DI.Queries.Handlers.ChainOfResponsibility.CommandHandlerRegistrationExtensions.RegisterQueryHandler``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Enterprise.ApplicationServices.Core.Queries.Handlers.QueryHandlerBase{``0,``1}},System.Action{Enterprise.ApplicationServices.DI.Queries.Handlers.ChainOfResponsibility.RegistrationOptions{``0,``1}})">
            <summary>
            Register a query handler using the chain of responsibility design pattern.
            </summary>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="services"></param>
            <param name="factory"></param>
            <param name="configureOptions"></param>
        </member>
        <member name="M:Enterprise.ApplicationServices.DI.Queries.Handlers.ChainOfResponsibility.CommandHandlerRegistrationExtensions.RegisterSimpleQueryHandler``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Enterprise.ApplicationServices.DI.Queries.Handlers.ChainOfResponsibility.RegistrationOptions{``0,``1}})">
            <summary>
            Register a simple query handler.
            This expects that a separate registration of <see cref="T:Enterprise.ApplicationServices.Core.Queries.Handlers.IQueryLogic`2"/> has been made.
            </summary>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="services"></param>
            <param name="configureOptions"></param>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Queries.Handlers.ChainOfResponsibility.RegistrationOptions`2.QueryHandlerFactory">
            <summary>
            A factory method delegate that instantiates the chain of responsibility instance.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Queries.Handlers.ChainOfResponsibility.RegistrationOptions`2.ConfigureChainOfResponsibility">
            <summary>
            Provide a custom responsibility chain configuration.
            If not provided, the default chain will be used.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Queries.Handlers.Options.RegistrationOptionsBase`2.ServiceLifetime">
            <summary>
            This sets the service lifetime for the query handler registration.
            The default is a transient service lifetime, and is recommended for most registrations.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Queries.Handlers.Options.RegistrationOptionsBase`2.PostConfigure">
            <summary>
            Provider further configuration to the query handler registration.
            </summary>
        </member>
        <member name="M:Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.CommandHandlerRegistrationExtensions.RegisterQueryHandler``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,Enterprise.ApplicationServices.Core.Queries.Handlers.QueryHandlerBase{``0,``1}},System.Action{Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.RegistrationOptions{``0,``1}})">
            <summary>
            Register a query handler.
            </summary>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="services"></param>
            <param name="factory"></param>
            <param name="configureOptions"></param>
        </member>
        <member name="M:Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.CommandHandlerRegistrationExtensions.RegisterSimpleQueryHandler``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.RegistrationOptions{``0,``1}})">
            <summary>
            Register a simple query handler.
            This expects that a separate registration of <see cref="T:Enterprise.ApplicationServices.Core.Queries.Handlers.IQueryLogic`2"/> has been made.
            </summary>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="services"></param>
            <param name="configureOptions"></param>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.RegistrationOptions`2.UseDecorators">
            <summary>
            Register decorators for the query handler.
            This is enabled by default.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.RegistrationOptions`2.DecoratorFactories">
            <summary>
            Provide custom factory delegates used for decorator composition.
            If none are provided, the default decorators will be used.
            <see cref="P:Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.RegistrationOptions`2.UseDecorators"/> must be true, otherwise decorator registrations will be skipped.
            </summary>
        </member>
        <member name="P:Enterprise.ApplicationServices.DI.Queries.Handlers.Standard.RegistrationOptions`2.QueryHandlerFactory">
            <summary>
            A factory method delegate that instantiates the query handler instance.
            </summary>
        </member>
    </members>
</doc>
