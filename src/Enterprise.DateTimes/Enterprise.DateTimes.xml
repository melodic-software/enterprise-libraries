<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enterprise.DateTimes</name>
    </assembly>
    <members>
        <member name="T:Enterprise.DateTimes.Age.Abstract.ICalculateAge">
            <summary>
            Provides functionality to calculate age.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Age.Abstract.ICalculateAge.CalculateAge(System.DateTimeOffset)">
            <summary>
            Calculates the age based on the given birth date.
            </summary>
            <param name="birthDate">The birth date to calculate age from.</param>
            <returns>A Calculation result indicating the age or the reason for failure.</returns>
        </member>
        <member name="T:Enterprise.DateTimes.Model.UniversalDateTime">
            <summary>
            Represents a date and time in Universal Coordinated Time (UTC).
            NOTE: UTC is a standard, and GMT is a timezone.
            </summary>
        </member>
        <member name="P:Enterprise.DateTimes.Model.UniversalDateTime.DateTimeOffset">
            <summary>
            Gets the DateTimeOffset in UTC.
            </summary>
        </member>
        <member name="P:Enterprise.DateTimes.Model.UniversalDateTime.DateTime">
            <summary>
            Gets the DateTime representation of the DateTimeOffset in UTC.
            </summary>
        </member>
        <member name="P:Enterprise.DateTimes.Model.UniversalDateTime.DateOnly">
            <summary>
            Gets the DateOnly representation of the DateTimeOffset.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Model.UniversalDateTime.#ctor">
            <summary>
            Initializes a new instance of the UniversalDateTime class set to the current UTC date and time.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Model.UniversalDateTime.#ctor(System.TimeProvider)">
            <summary>
            Initializes a new instance of the UniversalDateTime class set to the current UTC date and time.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Model.UniversalDateTime.#ctor(System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the UniversalDateTime class using the specified DateTimeOffset.
            </summary>
            <param name="dateTimeOffset">The DateTimeOffset to use. Must be in UTC.</param>
            <exception cref="T:System.ArgumentException">Thrown if the provided DateTimeOffset is not in UTC.</exception>
        </member>
        <member name="M:Enterprise.DateTimes.Model.UniversalDateTime.ToString">
            <summary>
            Returns a string that represents the current object in ISO 8601 format.
            </summary>
            <returns>A string in ISO 8601 format representing the current UTC date and time.</returns>
        </member>
        <member name="T:Enterprise.DateTimes.Parsing.Abstract.IDateTimeParser">
            <summary>
            Provides methods for parsing strings into DateTime and DateTimeOffset objects.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.Abstract.IDateTimeParser.ParseDateTime(System.String,System.Globalization.CultureInfo,System.String)">
            <summary>
            Parses the given string into a DateTime object using the specified culture and format. 
            The parsed date and time are adjusted to a DateTime object.
            </summary>
            <param name="input">The string to parse.</param>
            <param name="cultureInfo">The culture information to use for parsing. Defaults to CultureInfo.InvariantCulture if null.</param>
            <param name="format">The format to use for parsing. Uses default formats if null.</param>
            <returns>Parsed DateTime object.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.Abstract.IDateTimeParser.ParseExactDateTime(System.String,System.String)">
            <summary>
            Parses the given string into a DateTime object using the exact specified format.
            </summary>
            <param name="input">The string to parse.</param>
            <param name="format">The exact format to use for parsing. Defaults to 'M/d/yyyy h:mm:ss tt' if null.</param>
            <returns>Parsed DateTime object.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.Abstract.IDateTimeParser.ParseDateTimeOffset(System.String,System.Globalization.CultureInfo,System.String)">
            <summary>
            Parses the given string into a DateTimeOffset object using the specified culture and format.
            Adjusts the parsed DateTimeOffset object to UTC.
            </summary>
            <param name="input">The string to parse.</param>
            <param name="cultureInfo">The culture information to use for parsing. Defaults to CultureInfo.InvariantCulture if null.</param>
            <param name="format">The format to use for parsing. Uses default formats if null.</param>
            <returns>Parsed DateTimeOffset object.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.Abstract.IDateTimeParser.ParseExactDateTimeOffset(System.String,System.String)">
            <summary>
            Parses the given string into a DateTimeOffset object using the exact specified format.
            </summary>
            <param name="input">The string to parse.</param>
            <param name="format">The exact format to use for parsing. Defaults to 'M/d/yyyy h:mm:ss tt' if null.</param>
            <returns>Parsed DateTimeOffset object.</returns>
        </member>
        <member name="T:Enterprise.DateTimes.Parsing.DateTimeParser">
            <summary>
            A class for parsing date and time strings into DateTime and DateTimeOffset objects.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.DateTimeParser.ParseDateTime(System.String,System.Globalization.CultureInfo,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.DateTimeParser.ParseExactDateTime(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.DateTimeParser.ParseDateTimeOffset(System.String,System.Globalization.CultureInfo,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enterprise.DateTimes.Parsing.DateTimeParser.ParseExactDateTimeOffset(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enterprise.DateTimes.Unix.Abstract.IUnixTimeConverter.ConvertToDateTime(System.Int64)">
            <summary>
            Converts Unix time in seconds to a DateTime object.
            </summary>
            <param name="unixSeconds">The Unix time in seconds.</param>
            <returns>A DateTime object representing the specified Unix time.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Unix.Abstract.IUnixTimeConverter.ConvertToUnixSeconds(System.DateTime)">
            <summary>
            Converts a DateTime object to Unix time in seconds.
            </summary>
            <param name="dateTime">The DateTime object to convert.</param>
            <returns>The Unix time in seconds corresponding to the given DateTime.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Unix.Abstract.IUnixTimeConverter.ConvertToDateTimeOffset(System.Int64)">
            <summary>
            Converts Unix time in seconds to a DateTimeOffset object.
            </summary>
            <param name="unixSeconds">The Unix time in seconds.</param>
            <returns>A DateTimeOffset object representing the specified Unix time.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Unix.Abstract.IUnixTimeConverter.ConvertToUnixSeconds(System.DateTimeOffset)">
            <summary>
            Converts a DateTimeOffset object to Unix time in seconds.
            </summary>
            <param name="dateTime">The DateTimeOffset object to convert.</param>
            <returns>The Unix time in seconds corresponding to the given DateTimeOffset.</returns>
        </member>
        <member name="T:Enterprise.DateTimes.Unix.UnixTimeConverter">
            <summary>
            Provides methods for converting between Unix time and .NET's DateTime and DateTimeOffset.
            Unix time is the number of seconds that have elapsed since January 1, 1970 (midnight UTC/GMT),
            not counting leap seconds. The class ensures that all DateTime and DateTimeOffset objects
            are treated as UTC, maintaining consistency across conversions.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Unix.UnixTimeConverter.ConvertToDateTime(System.Int64)">
            <summary>
            Converts Unix time in seconds to a DateTime object in UTC.
            </summary>
            <param name="unixSeconds">The Unix time in seconds.</param>
            <returns>A DateTime object representing the specified Unix time in UTC.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Unix.UnixTimeConverter.ConvertToUnixSeconds(System.DateTime)">
            <summary>
            Converts a DateTime object to Unix time in seconds.
            Assumes the input DateTime is in UTC.
            </summary>
            <param name="dateTime">The DateTime object to convert.</param>
            <returns>The Unix time in seconds corresponding to the given DateTime.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Unix.UnixTimeConverter.ConvertToDateTimeOffset(System.Int64)">
            <summary>
            Converts Unix time in seconds to a DateTimeOffset object in UTC.
            </summary>
            <param name="unixSeconds">The Unix time in seconds.</param>
            <returns>A DateTimeOffset object representing the specified Unix time in UTC.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Unix.UnixTimeConverter.ConvertToUnixSeconds(System.DateTimeOffset)">
            <summary>
            Converts a DateTimeOffset object to Unix time in seconds.
            </summary>
            <param name="dateTime">The DateTimeOffset object to convert.</param>
            <returns>The Unix time in seconds corresponding to the given DateTimeOffset.</returns>
        </member>
        <member name="T:Enterprise.DateTimes.Weeks.Abstract.IWeekCalculator">
            <summary>
            Provides services for calculating week numbers and dates based on different standards.
            This includes both ISO 8601 week calculations and regional week calculations,
            as well as methods to get the start date of a week and the total number of weeks in a year.
            </summary>
        </member>
        <member name="M:Enterprise.DateTimes.Weeks.Abstract.IWeekCalculator.GetISOWeekOfYear(System.DateTime)">
            <summary>
            Calculates the ISO 8601 week number for a given date.
            </summary>
            <remarks>
            The ISO 8601 week date system is widely used in many parts of the world and is the international standard.
            According to this standard:
            - A week starts on Monday.
            - The first week of the year is the week that contains the first Thursday of the year.
            This method is preferred for applications needing standardization across different regions,
            particularly useful in international contexts for consistency.
            </remarks>
            <param name="dateTime">The DateTime for which the week number is to be calculated.</param>
            <returns>The ISO 8601 week number of the year.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Weeks.Abstract.IWeekCalculator.GetRegionalWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek,System.Globalization.CultureInfo)">
            <summary>
            Calculates the week number for a given date based on specific cultural or regional settings.
            </summary>
            <remarks>
            This method is suitable for applications tailored to specific cultures or regions where the
            definition of the first day of the week and the first week of the year may vary.
            The CalendarWeekRule and DayOfWeek parameters can be adjusted to match local conventions.
            </remarks>
            <param name="date">The DateTime for which the week number is to be calculated.</param>
            <param name="rule">Defines the rule used to determine the first week of the year.</param>
            <param name="firstDayOfWeek">Specifies the first day of the week.</param>
            <param name="culture">Optional. The culture to use for the calculation. If null, InvariantCulture is used.</param>
            <returns>The week number of the year based on the specified culture or region.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Weeks.Abstract.IWeekCalculator.GetYearWeekStartDate(System.Int32,System.Int32)">
            <summary>
            Gets the start date of a given year and ISO week number.
            </summary>
            <param name="year">The year.</param>
            <param name="week">The ISO week number.</param>
            <returns>The DateTime representing the start date of the given ISO week.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Weeks.Abstract.IWeekCalculator.GetTotalISOWeeksInYear(System.Int32)">
            <summary>
            Calculates the total number of ISO weeks in a given year.
            </summary>
            <param name="year">The year for which the number of weeks is to be calculated.</param>
            <returns>The total number of ISO weeks in the specified year.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Years.Abstract.ILeapYearCalculator.GetLeapYears(System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            Calculates all leap years within a specified range for a given calendar system.
            </summary>
            <param name="startYear">The starting year of the range.</param>
            <param name="endYear">The ending year of the range.</param>
            <param name="calendar">Optional. The calendar system to use for the calculation. Defaults to GregorianCalendar if null.</param>
            <returns>A list of all leap years within the specified range for the given calendar system.</returns>
        </member>
        <member name="M:Enterprise.DateTimes.Years.Abstract.ILeapYearCalculator.IsLeapYear(System.Int32,System.Globalization.Calendar)">
            <summary>
            Determines whether the specified year is a leap year, based on the provided calendar system.
            </summary>
            <remarks>
            This method utilizes the IsLeapYear method of the given calendar system to determine leap years.
            It supports any calendar that inherits from the System.Globalization.Calendar class.
            </remarks>
            <param name="year">The year to check for being a leap year.</param>
            <param name="calendar">The calendar system to use for the leap year calculation. 
            If null, the Gregorian calendar is used as default.</param>
            <returns>true if the specified year is a leap year in the given calendar system; otherwise, false.</returns>
        </member>
    </members>
</doc>
