<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enterprise.ModularMonoliths</name>
    </assembly>
    <members>
        <member name="M:Enterprise.ModularMonoliths.Configuration.WebApplicationBuilderExtensions.RegisterModuleConfig(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            If the app has been configured as a modular monolith,
            this will add any module specific JSON config files that follow the convention.
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Enterprise.ModularMonoliths.Model.IModule">
            <summary>
            Represents a module in a modular monolith.
            </summary>
        </member>
        <member name="P:Enterprise.ModularMonoliths.Options.ModularMonolithOptions.JsonSettingsFileNameSearchPattern">
            <summary>
            The search pattern used for JSON files containing application settings.
            </summary>
        </member>
        <member name="P:Enterprise.ModularMonoliths.Options.ModuleNamingOptions.UseExplicitModuleFormat">
            <summary>
            This means all module projects should follow an explicit format.
            The module name is contained in the third segment.
            Ex: "Evently.Modules.Events.Domain".
            </summary>
        </member>
        <member name="P:Enterprise.ModularMonoliths.Options.ModuleNamingOptions.UseTruncatedModuleFormat">
            <summary>
            This means all module projects do not start with the name of the bootstrapping application.
            This also means the explicit word "module" is not used.
            It is expected for the module name to be the first segment.
            EX: "Events.Domain".
            </summary>
        </member>
        <member name="P:Enterprise.ModularMonoliths.Options.ModuleNamingOptions.UseModuleAttributes">
            <summary>
            This will search for any assembly attributes when resolving module name association.
            </summary>
        </member>
        <member name="P:Enterprise.ModularMonoliths.Options.ModuleStateOptions.ConfigSettingKeyName">
            <summary>
            This is the config setting that drives whether a module is enabled.
            If this is not configured or is mistyped, the default assumption is that the module is not enabled.
            </summary>
        </member>
    </members>
</doc>
