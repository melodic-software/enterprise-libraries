using Enterprise.Api.Security.Constants;
using Microsoft.AspNetCore.Authentication.JwtBearer;

namespace Enterprise.Api.Security.Options;

public class JwtBearerTokenOptions
{
    public const string ConfigSectionKey = "Custom:JwtBearerToken";

    /// <summary>
    /// The API is configured to trust tokens generated by the identity provider / security token service at this URL:
    /// </summary>
    public string Authority { get; set; } = SecurityConstants.DemoAuthority;

    /// <summary>
    /// The audience is a token claim that contains the name of the application it is meant for.
    /// This was created by Microsoft and is not part of the OAuth2 standard.
    /// </summary>
    public string Audience { get; set; } = SecurityConstants.DemoAudience;

    /// <summary>
    /// The claim used for the name of the logged-in user.
    /// </summary>
    public string? NameClaimType { get; set; } = SecurityConstants.DefaultJwtNameClaimType;

    /// <summary>
    /// These are the valid token types that are used during token validation.
    /// By default, only "at+jwt" format is supported.
    /// This ensures we're only accepting JWT tokens, which prevents so-called "JWT" confusion attacks.
    /// </summary>
    public HashSet<string> ValidTokenTypes { get; set; } = new(StringComparer.OrdinalIgnoreCase)
    {
        SecurityConstants.AccessTokenInJwtFormatType
    };

    /// <summary>
    /// A custom delegate that allows for complete customization of JwtBearerOptions.
    /// NOTE: if this is provided, all the default configuration is ignored.
    /// </summary>
    public Action<JwtBearerOptions>? ConfigureJwtBearerOptions { get; set; } = null;
}
